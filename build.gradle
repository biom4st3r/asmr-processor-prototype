plugins {
    id 'java'
}

group 'org.quiltmc'
version '1.0'

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
    // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
    // We'll use that if it's available, but otherwise we'll use the older option.
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release.set(8)
    }
}
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
repositories {
    mavenCentral()
    maven {
        name = "Quilt"
        url = "https://maven.quiltmc.org/repository/release"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

dependencies {
    compileOnly 'org.jetbrains:annotations:20.1.0'
    compileOnly project(":annotations")
    testCompileOnly project(":annotations")
    implementation 'org.ow2.asm:asm:9.1'
    implementation 'org.quiltmc:quilt-json5:1.0.0-rc.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    annotationProcessor project(":internalProcessor")
    testAnnotationProcessor project(":testProcessor")
}

test {
    useJUnitPlatform()
}
